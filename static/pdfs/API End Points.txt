Core Functionalities

You can either use Flask security (session or token) or JWT based Token based authentication to implement role-based access control
The app must have a suitable model to store and differentiate all the types of users of the app.

3. Service Management - for the Admin

Update an existing service - e.g. name, price, time_required and/or other fields
Delete an existing service

4. Service Request - for the customers

Edit an existing service request - e.g. date_of_request, completion status, remarks etc
Close an existing service request.

6. Take action on a particular service request - for the service professional

Ability to close the service request once completed

7. Backend Jobs

a. Scheduled Job - Daily reminders - The application should send daily reminders to service professionals on g-chat using Google Chat Webhooks or SMS or mail

Check if a professional has not visited/has pending service request
If yes, then send the alert asking them to visit/accept/reject the service request
The reminder can be sent in the evening, every day (students can choose the time)
b. Scheduled Job - Monthly Activity Report - Devise a monthly report for the customer created using HTML and sent via mail.

The activity report can include service details, how many services were requested/closed etc.
For the monthly report to be sent, start a job on the first day of every month → create a report using the above parameters → send it as an email
c. User Triggered Async Job - Export as CSV - Devise a CSV format details for the service requests closed by the professional


This export is meant to download the service details (service_id, customer_id, professional_id, date_of_request, remarks etc.)
Have a dashboard from where the admin can trigger the export
This should trigger a batch job, and send an alert once done
8. Performance and Caching


Add caching where required to increase the performance
Add cache expiry
API Performance






*****************
this is whats left from Core
*****************

Hard part : 
the application should send daily reminders to service professional 
on mail telling them of pending service request
send monthly report for the customer having their details. number of service
closed and all that

add an export option for admin which exports everything in csv 

add celery and redis if time left

before submtting , clear the database , clear the profile phots , clear then resumes present , delete this file , update requirements.txt wrt to small laptop,
delete household wala pdf 